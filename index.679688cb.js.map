{"mappings":"kpBAsBA,IAAAA,EACAC,E,iFArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,MCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,gGCAlD,MAAMC,EAAW,CACpBC,OAAO,EAEPC,MAAO,IACPC,OAAQ,IAERC,qBAAsB,EAEtBC,QAAS,ICON,SAASC,EAAeb,GAAc,OAAOc,SAASC,eAAef,GAIrE,MAAMgB,EAAKC,KAAKC,G,MCnBvBC,EAAiB,IAAAC,IAAoBjB,EAAA,SAAAkB,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WC+CrF,MAAMC,EAAW,IA5CxB,MAGIC,cACIC,KAAKC,OAASD,KAAKE,aAAavB,EAASE,MAAOF,EAASG,OAAQ,cAGrEqB,UAAUC,EAAcC,GACpB,MAAMC,EAAQ,IAAIC,MAAM,IAAK,KAG7B,OAFAD,EAAME,IAAMJ,EACZE,EAAMD,OAASA,EACRC,EAGXJ,aAAaO,EAAWC,EAAWtC,EAAoB,MACnD,MAAM6B,EAAgB,MAAN7B,GFDMuC,EECqB,SFDKzB,SAAS0B,cAAcD,IEChB1B,EAAeb,GFDvE,IAAuBuC,EEEtBV,EAAOpB,MAAQ4B,EACfR,EAAOnB,OAAS4B,EAEhB,OADgBT,EAAOY,WAAW,MAItCC,UAAUR,EAAyBS,EAAWC,GAC1ChB,KAAKC,OAAOa,UAAUR,EAAOS,EAAGC,GAGpCC,OAAOC,GACHlB,KAAKC,OAAOkB,UAAUxC,EAASE,MAAQ,EAAGF,EAASG,OAAS,GAC5DkB,KAAKC,OAAOgB,OAAOC,GAGvBE,OACIpB,KAAKC,OAAOmB,OAGhBC,UACIrB,KAAKC,OAAOoB,UAGhBC,QACItB,KAAKC,OAAOsB,UAAU,EAAG,EAAG5C,EAASE,MAAOF,EAASG,UCtC7D,IAAI0C,EAAa7C,EAASI,qBACtB0C,EAAWC,YAAYC,MACvBC,EAAaH,EACjB,MAAMI,EAAO,ICJN,MACHvB,MAAyC,KACzCwB,SAA2B,EAE3B/B,cACIC,KAAKM,MAAQR,EAASK,UAAU4B,EAAAxC,IAAM,SAG1CyC,OAAOC,GACHjC,KAAK8B,UAAY1C,EAAK,KAG1B8C,SACSlC,KAAKM,OAAO6B,WACjBrC,EAASsB,OACTtB,EAASmB,OAAOjB,KAAK8B,UACrBhC,EAASgB,UAAUd,KAAKM,OAAO,MAAU,MACzCR,EAASuB,cDXjB,SAASe,EAAKC,GACVC,OAAOC,uBAAsBC,GAAKJ,EAAKI,KACvC,IHLkBC,EGsBNR,EAhBRS,EAAW,EAEXL,EAHWZ,EAAWD,IHLRiB,GGSAJ,EAASZ,GACID,EAA3BkB,EHVsCrD,KAAKsD,MAAMF,IGarD,IAAK,IAAIvE,EAAI,EAAGA,EAAIwE,EAAUxE,IAC1BuD,GAAYD,EAQJS,EAPDT,EAAa,IAQxBK,EAAKG,OAAOC,GAIZnC,EAASwB,QACTO,EAAKK,SATLN,EAAaS,EAYjBD,CAAK","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-e540c6dbaa6c96ce.js","src/settings.ts","src/alias.ts","node_modules/@parcel/runtime-js/lib/runtime-b53a5f11334a5092.js","src/renderer.ts","src/app.ts","src/logo.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"hvItV\\\":\\\"index.679688cb.js\\\",\\\"8lAoY\\\":\\\"logo.0a7a3f9d.png\\\"}\"));","export const Settings = {\n    debug: false,\n\n    width: 960,\n    height: 640,\n\n    engineTimeResolution: 1,\n\n    epsilon: 0.1,\n}","export function sign(value: number, defaultIfZero = 1): number {\n    const sign = Math.sign(value);\n    return sign == 0 ? defaultIfZero : sign;\n}\n\nexport function round(value: number) { return Math.round(value); }\n\nexport function floor(value: number) { return Math.floor(value); }\n\nexport function abs(value: number) { return Math.abs(value); }\n\nexport function ceil(value: number) { return Math.ceil(value); }\n\nexport function max(value1: number, value2: number) { return Math.max(value1, value2); }\n\nexport function getElementById(id: string) { return document.getElementById(id); }\n\nexport function createElement(element: string) { return document.createElement(element); }\n\nexport const PI = Math.PI;","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8lAoY\")).toString();","import { createElement, getElementById } from \"./alias\";\nimport { Settings } from \"./settings\";\n\nclass RendererEngine {\n    private canvas: CanvasRenderingContext2D;\n\n    constructor() {\n        this.canvas = this.createCanvas(Settings.width, Settings.height, \"gameCanvas\");\n    }\n\n    loadImage(path: string, onload: () => void): HTMLImageElement {\n        const image = new Image(151, 151);\n        image.src = path;\n        image.onload = onload;\n        return image;\n    }\n\n    createCanvas(w: number, h: number, id: string | null = null): CanvasRenderingContext2D {\n        const canvas = (id == null ? createElement(\"canvas\") : getElementById(id)) as HTMLCanvasElement;\n        canvas.width = w;\n        canvas.height = h;\n        const context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n        return context;\n    }\n\n    drawImage(image: HTMLImageElement, x: number, y: number): void {\n        this.canvas.drawImage(image, x, y);\n    }\n\n    rotate(angle: number): void {\n        this.canvas.translate(Settings.width / 2, Settings.height / 2);\n        this.canvas.rotate(angle);\n    }\n\n    save(): void {\n        this.canvas.save();\n    }\n\n    restore(): void {\n        this.canvas.restore();\n    }\n\n    clear(): void {\n        this.canvas.clearRect(0, 0, Settings.width, Settings.height);\n    }\n}\n\nexport const Renderer = new RendererEngine();","import { Settings } from \"./settings\";\nimport { floor } from \"./alias\";\nimport { Logo } from \"./logo\";\nimport { Renderer } from \"./renderer\";\n\nlet tickLength = Settings.engineTimeResolution;\nlet lastTick = performance.now();\nlet lastRender = lastTick;\nconst logo = new Logo();\n\nfunction loop(tFrame: number) {\n    window.requestAnimationFrame(t => loop(t));\n    var nextTick = lastTick + tickLength;\n    var numTicks = 0;\n\n    if (tFrame > nextTick) {\n        var elapsed = tFrame - lastTick;\n        numTicks = floor(elapsed / tickLength);\n    }\n\n    for (var i = 0; i < numTicks; i++) {\n        lastTick += tickLength;\n        update(tickLength / 1000);\n    }\n\n    render();\n    lastRender = tFrame;\n}\n\nfunction update(delta: number) {\n    logo.update(delta);\n}\n\nfunction render() {\n    Renderer.clear();\n    logo.render();\n}\n\nloop(0)","import logo from \"../assets/logo.png\";\nimport { PI } from \"./alias\";\nimport { Renderer } from \"./renderer\";\n\nexport class Logo implements Entity {\n    private image: HTMLImageElement | null = null;\n    private rotation: number = 0;\n\n    constructor() {\n        this.image = Renderer.loadImage(logo, () => { });\n    }\n\n    update(delta: number) {\n        this.rotation -= PI / 1080;\n    }\n\n    render(): void {\n        if (!this.image?.complete) return;\n        Renderer.save();\n        Renderer.rotate(this.rotation);\n        Renderer.drawImage(this.image, -151 / 2, -151 / 2);\n        Renderer.restore();\n    }\n}"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$95c1e97c8d1548a3$export$c72f6eaae7b9adff","debug","width","height","engineTimeResolution","epsilon","$dc72d67b15d606b5$export$83595b84fc78b9b4","document","getElementById","$dc72d67b15d606b5$export$6b5c1ceb16d01dc3","Math","PI","$9cbcbc18ca4a0a3e$exports","URL","resolve","import","meta","url","toString","$621f3774f67738fc$export$88530751e3977073","constructor","this","canvas","createCanvas","loadImage","path","onload","image","Image","src","w","h","element","createElement","getContext","drawImage","x","y","rotate","angle","translate","save","restore","clear","clearRect","$f43313d21d3fd8e2$var$tickLength","$f43313d21d3fd8e2$var$lastTick","performance","now","$f43313d21d3fd8e2$var$lastRender","$f43313d21d3fd8e2$var$logo","rotation","$parcel$interopDefault","update","delta","render","complete","$f43313d21d3fd8e2$var$loop","tFrame","window","requestAnimationFrame","t","value","numTicks","floor"],"version":3,"file":"index.679688cb.js.map"}