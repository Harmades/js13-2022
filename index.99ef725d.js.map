{"mappings":"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","sources":["src/zzfxm.js"],"sourcesContent":["// zzfx() - the universal entry point -- returns a AudioBufferSourceNode\nzzfx = (...t) => zzfxP(zzfxG(...t))\n\n// zzfxP() - the sound player -- returns a AudioBufferSourceNode\nzzfxP = (...t) => { let e = zzfxX.createBufferSource(), f = zzfxX.createBuffer(t.length, t[0].length, zzfxR); t.map((d, i) => f.getChannelData(i).set(d)), e.buffer = f, e.connect(zzfxX.destination), e.start(); return e }\n\n// zzfxG() - the sound generator -- returns an array of sample data\nzzfxG = (q = 1, k = .05, c = 220, e = 0, t = 0, u = .1, r = 0, F = 1, v = 0, z = 0, w = 0, A = 0, l = 0, B = 0, x = 0, G = 0, d = 0, y = 1, m = 0, C = 0) => { let b = 2 * Math.PI, H = v *= 500 * b / zzfxR ** 2, I = (0 < x ? 1 : -1) * b / 4, D = c *= (1 + 2 * k * Math.random() - k) * b / zzfxR, Z = [], g = 0, E = 0, a = 0, n = 1, J = 0, K = 0, f = 0, p, h; e = 99 + zzfxR * e; m *= zzfxR; t *= zzfxR; u *= zzfxR; d *= zzfxR; z *= 500 * b / zzfxR ** 3; x *= b / zzfxR; w *= b / zzfxR; A *= zzfxR; l = zzfxR * l | 0; for (h = e + m + t + u + d | 0; a < h; Z[a++] = f)++K % (100 * G | 0) || (f = r ? 1 < r ? 2 < r ? 3 < r ? Math.sin((g % b) ** 3) : Math.max(Math.min(Math.tan(g), 1), -1) : 1 - (2 * g / b % 2 + 2) % 2 : 1 - 4 * Math.abs(Math.round(g / b) - g / b) : Math.sin(g), f = (l ? 1 - C + C * Math.sin(2 * Math.PI * a / l) : 1) * (0 < f ? 1 : -1) * Math.abs(f) ** F * q * zzfxV * (a < e ? a / e : a < e + m ? 1 - (a - e) / m * (1 - y) : a < e + m + t ? y : a < h - d ? (h - a - d) / u * y : 0), f = d ? f / 2 + (d > a ? 0 : (a < h - d ? 1 : (h - a) / d) * Z[a - d | 0] / 2) : f), p = (c += v += z) * Math.sin(E * x - I), g += p - p * B * (1 - 1E9 * (Math.sin(a) + 1) % 2), E += p - p * B * (1 - 1E9 * (Math.sin(a) ** 2 + 1) % 2), n && ++n > A && (c += w, D += w, n = 0), !l || ++J % l || (c = D, v = H, n = n || 1); return Z }\n\n// zzfxV - global volume\nzzfxV = .3\n\n// zzfxR - global sample rate\nzzfxR = 44100\n\n//! ZzFXM (v2.0.3) | (C) Keith Clark | MIT | https://github.com/keithclark/ZzFXM\nzzfxM = (n, f, t, e = 125) => { let l, o, z, r, g, h, x, a, u, c, d, i, m, p, G, M = 0, R = [], b = [], j = [], k = 0, q = 0, s = 1, v = {}, w = zzfxR / e * 60 >> 2; for (; s; k++)R = [s = a = d = m = 0], t.map((e, d) => { for (x = f[e][k] || [0, 0, 0], s |= !!f[e][k], G = m + (f[e][0].length - 2 - !a) * w, p = d == t.length - 1, o = 2, r = m; o < x.length + p; a = ++o) { for (g = x[o], u = o == x.length + p - 1 && p || c != (x[0] || 0) | g | 0, z = 0; z < w && a; z++ > w - 99 && u ? i += (i < 1) / 99 : 0)h = (1 - i) * R[M++] / 2 || 0, b[r] = (b[r] || 0) - h * q + h, j[r] = (j[r++] || 0) + h * q + h; g && (i = g % 1, q = x[1] || 0, (g |= 0) && (R = v[[c = x[M = 0] || 0, g]] = v[[c, g]] || (l = [...n[c]], l[2] *= 2 ** ((g - 12) / 12), g > 0 ? zzfxG(...l) : []))) } m = G }); return [b, j] }"],"names":["zzfx","t","zzfxP","zzfxG","e","zzfxX","createBufferSource","f","createBuffer","length","zzfxR","map","d","i","getChannelData","set","buffer","connect","destination","start","q","k","c","u","r","F","v","z","w","A","l","B","x","G","y","m","C","p","h","b","Math","PI","H","I","D","random","Z","g","E","a","n","J","K","sin","max","min","tan","abs","round","zzfxV","zzfxM","e1","o","d1","M","R","j","s"],"version":3,"file":"index.99ef725d.js.map"}