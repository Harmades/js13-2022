{"mappings":"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","sources":["src/alias.ts","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-e540c6dbaa6c96ce.js","src/settings.ts","src/renderer.ts","src/bullet.ts","src/random.ts","src/vector.ts","src/enemy.ts","src/wave.ts","src/enemies.ts","node_modules/@parcel/runtime-js/lib/runtime-b53a5f11334a5092.js","src/input.ts","src/sound.ts","src/player.ts","src/physics.ts","src/app.ts"],"sourcesContent":["export function sign(value: number, defaultIfZero = 1): number {\n    const sign = Math.sign(value);\n    return sign == 0 ? defaultIfZero : sign;\n}\n\nexport function round(value: number) {\n    return Math.round(value);\n}\n\nexport function floor(value: number) {\n    return Math.floor(value);\n}\n\nexport function abs(value: number) {\n    return Math.abs(value);\n}\n\nexport function ceil(value: number) {\n    return Math.ceil(value);\n}\n\nexport function max(value1: number, value2: number) {\n    return Math.max(value1, value2);\n}\n\nexport function cos(value: number): number {\n    return Math.cos(value);\n}\n\nexport function sin(value: number): number {\n    return Math.sin(value);\n}\n\nexport function asin(value: number): number {\n    return Math.asin(value);\n}\n\nexport function sqrt(value: number) {\n    return Math.sqrt(value);\n}\n\nexport function pow(value: number, power: number) {\n    return Math.pow(value, power);\n}\n\nexport function getElementById(id: string) {\n    return document.getElementById(id);\n}\n\nexport function createElement(element: string) {\n    return document.createElement(element);\n}\n\nexport const PI = Math.PI;\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"hvItV\\\":\\\"index.a2906984.js\\\",\\\"8lAoY\\\":\\\"logo.0a7a3f9d.png\\\"}\"));","export const Settings = {\n    debug: false,\n\n    width: 960,\n    height: 640,\n\n    playerSpeedX: 300,\n    playerSpeedY: 300,\n\n    playerBulletSpeedX: 800,\n    enemyBulletSpeedX: 2,\n    enemyShootFrequency: 1,\n    enemyBulletPoolSize: 1000,\n\n    enemyWidth: 50,\n    enemyHeight: 50,\n\n    waveEasyTimeMin: 4,\n    waveEasyTimeMax: 8,\n    waveEasyAmplitudeMin: 10,\n    waveEasyAmplitudeMax: 50,\n    waveEasyFrequencyMin: 0.1,\n    waveEasyFrequencyMax: 0.25,\n    waveEasyRxMin: 100,\n    waveEasyRxMax: 200,\n    waveEasyRyMin: 100,\n    waveEasyRyMax: 200,\n    waveEasySyMin: 0,\n    waveEasySyMax: 640 - 50,\n\n    waveMediumTimeMin: 4,\n    waveMediumTimeMax: 8,\n    waveMediumAmplitudeMin: 10,\n    waveMediumAmplitudeMax: 50,\n    waveMediumFrequencyMin: 0.1,\n    waveMediumFrequencyMax: 0.25,\n    waveMediumRxMin: 100,\n    waveMediumRxMax: 200,\n    waveMediumRyMin: 100,\n    waveMediumRyMax: 200,\n    waveMediumSyMin: 0,\n    waveMediumSyMax: 640 - 50,\n\n    waveHardTimeMin: 4,\n    waveHardTimeMax: 8,\n    waveHardAmplitudeMin: 10,\n    waveHardAmplitudeMax: 50,\n    waveHardFrequencyMin: 0.1,\n    waveHardFrequencyMax: 0.25,\n    waveHardRxMin: 100,\n    waveHardRxMax: 200,\n    waveHardRyMin: 100,\n    waveHardRyMax: 200,\n    waveHardSyMin: 0,\n    waveHardSyMax: 640 - 50,\n\n    engineTimeResolution: 1,\n\n    epsilon: 0.1,\n    delta: 1 / 1000,\n};\n","import { createElement, getElementById, round } from \"./alias\";\nimport { Rectangle } from \"./rectangle\";\nimport { Settings } from \"./settings\";\nimport { Vector } from \"./vector\";\n\nexport type Renderer = {\n    canvas: CanvasRenderingContext2D;\n};\n\nexport function create() {\n    return {\n        canvas: createCanvas(Settings.width, Settings.height, \"gameCanvas\"),\n    };\n}\n\nexport function loadImage(path: string, onload?: () => void): HTMLImageElement {\n    const image = new Image(151, 151);\n    image.src = path;\n    if (onload) image.onload = onload;\n    return image;\n}\n\nexport function createCanvas(\n    w: number,\n    h: number,\n    id: string | null = null\n): CanvasRenderingContext2D {\n    const canvas = (id == null ? createElement(\"canvas\") : getElementById(id)) as HTMLCanvasElement;\n    canvas.width = w;\n    canvas.height = h;\n    const context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    return context;\n}\n\nexport function drawImage({ canvas }: Renderer, image: HTMLImageElement, { x, y }: Vector): void {\n    canvas.drawImage(image, x, y);\n}\n\nexport function drawRect({ canvas }: Renderer, { x, y, w, h }: Rectangle, color = \"#FF0000\") {\n    if (canvas) canvas.fillStyle = color;\n    canvas.fillRect(round(x), round(y), w, h);\n}\n\nexport function translate({ canvas }: Renderer, { x, y }: Vector) {\n    canvas.translate(x, y);\n}\n\nexport function rotate({ canvas }: Renderer, angle: number): void {\n    canvas.translate(Settings.width / 2, Settings.height / 2);\n    canvas.rotate(angle);\n}\n\nexport function save({ canvas }: Renderer): void {\n    canvas.save();\n}\n\nexport function restore({ canvas }: Renderer): void {\n    canvas.restore();\n}\n\nexport function clear({ canvas }: Renderer): void {\n    canvas.clearRect(0, 0, Settings.width, Settings.height);\n}\n","import { Rectangle } from \"./rectangle\";\nimport { drawRect, Renderer } from \"./renderer\";\nimport { Settings } from \"./settings\";\nimport { Speed } from \"./speed\";\nimport { Vector } from \"./vector\";\n\nexport type Bullet = Rectangle &\n    Speed & {\n        isActive: boolean;\n    };\n\nexport function create(): Bullet {\n    return { x: 0, y: 0, w: 5, h: 5, dx: 0, dy: 0, isActive: false };\n}\n\nexport function update(bullet: Bullet): void {\n    if (!bullet.isActive) return;\n    bullet.x += bullet.dx * Settings.delta;\n    bullet.y += bullet.dy * Settings.delta;\n}\n\nexport function render(renderer: Renderer, bullet: Bullet): void {\n    drawRect(renderer, bullet);\n}\n\nexport function fire(bullet: Bullet, dest: Vector, speed: number) {\n    bullet.x = dest.x;\n    bullet.y = dest.y;\n    bullet.dx = speed;\n    bullet.dy = 0;\n    bullet.isActive = true;\n}\n\nexport function free(bullet: Bullet): void {\n    bullet.isActive = false;\n}\n","export function rand<T>(...values: T[]): T {\n    return values[Math.floor(Math.random() * values.length)];\n}\n\nexport function randRange(min: number, max: number): number {\n    return Math.random() * (max + 1 - min) + min;\n}\n\nexport function randRangeInt(min: number, max: number): number {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max + 1 - min) + min); // The maximum is exclusive and the minimum is inclusive\n}\n\nexport function randColor(): string {\n    return Math.floor(Math.random() * 16777215).toString(16);\n}\n","import { cos, sin } from \"./alias\";\n\nexport type Vector = {\n    x: number;\n    y: number;\n};\n\nexport function create(x: number, y: number): Vector {\n    return {\n        x: x,\n        y: y,\n    };\n}\n\nexport function zero(): Vector {\n    return {\n        x: 0,\n        y: 0,\n    };\n}\n\nexport function add(vector1: Vector, vector2: Vector): Vector {\n    return create(vector1.x + vector2.x, vector1.y + vector2.y);\n}\n\nexport function multiply(vector: Vector, value: number): Vector {\n    return create(value * vector.x, value * vector.y);\n}\n\nexport function subtract(vector1: Vector, vector2: Vector): Vector {\n    return create(vector1.x - vector2.x, vector1.y - vector2.y);\n}\n\nexport function rotate(vector: Vector, angle: number): Vector {\n    const x2 = cos(angle) * vector.x - sin(angle) * vector.y;\n    const y2 = sin(angle) * vector.x + cos(angle) * vector.y;\n    return create(x2, y2);\n}\n","import { cos, PI, sin } from \"./alias\";\nimport {\n    Bullet,\n    create as createBullet,\n    fire as fireBullet,\n    render as renderBullet,\n    update as updateBullet,\n} from \"./bullet\";\nimport { rand, randRange } from \"./random\";\nimport { Rectangle } from \"./rectangle\";\nimport { drawRect, Renderer } from \"./renderer\";\nimport { Settings } from \"./settings\";\nimport { Speed } from \"./speed\";\nimport { add as addVector, create as createVector } from \"./vector\";\n\nexport enum Direction {\n    Up,\n    Left,\n    Right,\n    Down,\n}\n\nexport enum Pattern {\n    Straight,\n    Triangular,\n    Circular,\n    Rectangular,\n}\n\nconst bullets: Bullet[] = [];\nfor (let i = 0; i < Settings.enemyBulletPoolSize; i++) {\n    bullets.push(createBullet());\n}\n\nexport type Enemy = Rectangle &\n    Speed & {\n        dead: boolean;\n        elapsedTime: number;\n        shootElapsedTime: number;\n        direction?: Direction;\n        target?: number;\n        distance: number;\n        pattern: Pattern;\n        sy: number;\n        time: number;\n        color: string;\n        // Circular\n        amplitude?: number;\n        frequency?: number;\n        // Rectangular\n        rx?: number;\n        ry?: number;\n    };\n\nexport function create(\n    sy: number,\n    pattern: Pattern,\n    color: string,\n    time: number,\n    amplitude: number,\n    frequency: number,\n    rx: number,\n    ry: number\n): Enemy {\n    return {\n        x: Settings.width,\n        y: sy,\n        sy,\n        dx: 0,\n        dy: 0,\n        w: Settings.enemyWidth,\n        h: Settings.enemyHeight,\n        pattern,\n        time,\n        color,\n        dead: false,\n        amplitude,\n        frequency,\n        rx,\n        ry,\n        elapsedTime: 0,\n        shootElapsedTime: 0,\n        distance: 0,\n    };\n}\n\nexport function update(enemy: Enemy): void {\n    if (enemy.dead) return;\n    const frequency = enemy.frequency as number;\n    const amplitude = enemy.amplitude as number;\n    const speedX = Settings.width / enemy.time;\n    enemy.elapsedTime += Settings.delta;\n    enemy.shootElapsedTime += Settings.delta;\n    if (enemy.pattern == Pattern.Circular) {\n        enemy.dx =\n            2 * PI * frequency * amplitude * cos(2 * PI * frequency * enemy.elapsedTime) - speedX;\n        enemy.dy = 2 * PI * frequency * amplitude * sin(2 * PI * frequency * enemy.elapsedTime);\n    }\n    if (enemy.pattern == Pattern.Rectangular) {\n        const target = enemy.target as number;\n        if (enemy.direction == null) {\n            enemy.direction = Direction.Left;\n            enemy.target = randRange(50, 150);\n        }\n        if (enemy.direction == Direction.Left) {\n            if (enemy.distance >= target) {\n                enemy.direction = rand(Direction.Up, Direction.Down);\n                enemy.distance = 0;\n                enemy.target = randRange(50, 150);\n            }\n            enemy.dx = -speedX;\n            enemy.dy = 0;\n            enemy.distance += -enemy.dx * Settings.delta;\n        }\n        if (enemy.direction == Direction.Right) {\n        }\n        if (enemy.direction == Direction.Up) {\n            if (enemy.distance >= target) {\n                enemy.direction = Direction.Left;\n                enemy.target = randRange(50, 150);\n                enemy.distance = 0;\n            }\n            enemy.dy = -speedX / 2;\n            enemy.dx = 0;\n            enemy.distance += -enemy.dy * Settings.delta;\n        }\n        if (enemy.direction == Direction.Down) {\n            if (enemy.distance >= target) {\n                enemy.direction = Direction.Left;\n                enemy.target = randRange(50, 150);\n                enemy.distance = 0;\n            }\n            enemy.dy = speedX / 2;\n            enemy.dx = 0;\n            enemy.distance += enemy.dy * Settings.delta;\n        }\n    }\n    if (enemy.pattern == Pattern.Triangular) {\n        if (enemy.y >= enemy.sy + amplitude) {\n            enemy.dy = -4 * amplitude * frequency;\n        }\n        if (enemy.dy == 0 || enemy.y <= enemy.sy - amplitude) {\n            enemy.dy = 4 * amplitude * frequency;\n        }\n        enemy.dx = -speedX;\n    }\n    if (enemy.pattern == Pattern.Straight) {\n        enemy.dx = -speedX;\n    }\n\n    enemy.x += enemy.dx * Settings.delta;\n    enemy.y += enemy.dy * Settings.delta;\n\n    if (enemy.shootElapsedTime >= 1 / Settings.enemyShootFrequency) {\n        enemy.shootElapsedTime = 0;\n        const bullet = bullets.find((b) => !b.isActive);\n        if (bullet == undefined) return;\n        fireBullet(\n            bullet,\n            addVector(enemy, createVector(0, Settings.enemyHeight / 2)),\n            enemy.dx - Settings.enemyBulletSpeedX\n        );\n    }\n\n    for (let bullet of bullets) {\n        updateBullet(bullet);\n    }\n}\n\nexport function render(renderer: Renderer, enemy: Enemy) {\n    if (enemy.dead) return;\n    drawRect(renderer, enemy, enemy.color);\n    for (let bullet of bullets) {\n        renderBullet(renderer, bullet);\n    }\n}\n","import { create as createEnemy, Enemy, Pattern } from \"./enemy\";\nimport { rand, randColor, randRange, randRangeInt } from \"./random\";\nimport { Renderer } from \"./renderer\";\nimport { Settings } from \"./settings\";\n\nexport enum WaveDifficulty {\n    Easy,\n    Medium,\n    Hard,\n}\n\nexport type Wave = {\n    difficulty: WaveDifficulty;\n    enemies: Enemy[];\n};\n\nexport function create(difficulty: WaveDifficulty): Wave {\n    const enemies: Enemy[] = [];\n    if (difficulty == WaveDifficulty.Easy) {\n        const size = randRangeInt(3, 6);\n        for (let i = 0; i < size; i++) {\n            enemies.push(createRandEnemy(difficulty));\n        }\n    }\n    if (difficulty == WaveDifficulty.Medium) {\n        const size = randRangeInt(5, 10);\n        for (let i = 0; i < size; i++) {\n            enemies.push(createRandEnemy(difficulty));\n        }\n    }\n    if (difficulty == WaveDifficulty.Hard) {\n        const size = randRangeInt(9, 17);\n        for (let i = 0; i < size; i++) {\n            enemies.push(createRandEnemy(difficulty));\n        }\n    }\n\n    return { difficulty, enemies };\n}\n\nexport function createRandEnemy(difficulty: WaveDifficulty): Enemy {\n    const color = `#${randColor()}`;\n    if (difficulty == WaveDifficulty.Easy) {\n        const pattern = rand(Pattern.Straight, Pattern.Triangular);\n        const amplitude = randRange(Settings.waveEasyAmplitudeMin, Settings.waveEasyAmplitudeMax);\n        const frequency = randRange(Settings.waveEasyFrequencyMin, Settings.waveEasyFrequencyMax);\n        const rx = randRange(Settings.waveEasyRxMin, Settings.waveEasyRxMax);\n        const ry = randRange(Settings.waveEasyRyMin, Settings.waveEasyRyMax);\n        const sy = randRange(Settings.waveEasySyMin, Settings.waveEasySyMax);\n        const time = randRange(Settings.waveEasyTimeMin, Settings.waveEasyTimeMax);\n        return createEnemy(sy, pattern, color, time, amplitude, frequency, rx, ry);\n    }\n    if (difficulty == WaveDifficulty.Medium) {\n        const pattern = rand(Pattern.Straight, Pattern.Triangular, Pattern.Rectangular);\n        const amplitude = randRange(\n            Settings.waveMediumAmplitudeMin,\n            Settings.waveMediumAmplitudeMax\n        );\n        const frequency = randRange(\n            Settings.waveMediumFrequencyMin,\n            Settings.waveMediumFrequencyMax\n        );\n        const rx = randRange(Settings.waveMediumRxMin, Settings.waveMediumRxMax);\n        const ry = randRange(Settings.waveMediumRyMin, Settings.waveMediumRyMax);\n        const sy = randRange(Settings.waveMediumSyMin, Settings.waveMediumSyMax);\n        const time = randRange(Settings.waveMediumTimeMin, Settings.waveMediumTimeMax);\n        return createEnemy(sy, pattern, color, time, amplitude, frequency, rx, ry);\n    }\n    if (difficulty == WaveDifficulty.Hard) {\n        const pattern = rand(Pattern.Triangular, Pattern.Rectangular, Pattern.Circular);\n        const amplitude = randRange(Settings.waveHardAmplitudeMin, Settings.waveHardAmplitudeMax);\n        const frequency = randRange(Settings.waveHardFrequencyMin, Settings.waveHardFrequencyMax);\n        const rx = randRange(Settings.waveHardRxMin, Settings.waveHardRxMax);\n        const ry = randRange(Settings.waveHardRyMin, Settings.waveHardRyMax);\n        const sy = randRange(Settings.waveHardSyMin, Settings.waveHardSyMax);\n        const time = randRange(Settings.waveHardTimeMin, Settings.waveHardTimeMax);\n        return createEnemy(sy, pattern, color, time, amplitude, frequency, rx, ry);\n    }\n\n    throw new Error();\n}\n\nexport function update(): void {}\n\nexport function render(renderer: Renderer) {}\n","import { Enemy, render as renderEnemy, update as updateEnemy } from \"./enemy\";\nimport { Renderer } from \"./renderer\";\nimport { Settings } from \"./settings\";\nimport { create as createWave, WaveDifficulty } from \"./wave\";\n\nexport type Enemies = {\n    entities: Enemy[];\n    deadCount: number;\n};\n\nlet elapsedTime = 0;\n\nexport function create(): Enemies {\n    return {\n        entities: createWave(WaveDifficulty.Easy).enemies,\n        deadCount: 0,\n    };\n}\n\nexport function update(enemies: Enemies): void {\n    elapsedTime += Settings.delta;\n    if (elapsedTime >= Settings.waveEasyTimeMax || enemies.deadCount == enemies.entities.length) {\n        nextWave(enemies);\n        elapsedTime = 0;\n    }\n    for (let enemy of enemies.entities) {\n        updateEnemy(enemy);\n    }\n}\n\nexport function render(renderer: Renderer, enemies: Enemies): void {\n    for (let enemy of enemies.entities) {\n        renderEnemy(renderer, enemy);\n    }\n}\n\nexport function getActiveEnemies(enemies: Enemies): Enemy[] {\n    return enemies.entities.filter((e) => !e.dead);\n}\n\nexport function nextWave(enemies: Enemies): void {\n    enemies.entities = createWave(WaveDifficulty.Easy).enemies;\n    enemies.deadCount = 0;\n}\n\nexport function reset(enemies: Enemies): void {\n    nextWave(enemies);\n}\n\nexport function die(enemy: Enemy, enemies: Enemies) {\n    enemy.dead = true;\n    enemies.deadCount++;\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8lAoY\")).toString();","export const input = {\n    up: false,\n    down: false,\n    left: false,\n    right: false,\n    space: false,\n    shift: false,\n};\n\nexport type Input = typeof input;\n\nonkeydown = onkeyup = (event) => setKey(event.keyCode, event.type[5] != undefined);\n\nfunction setKey(keyCode: number, value: boolean) {\n    // Up (up / W / Z)\n    if (keyCode == 38 || keyCode == 90 || keyCode == 87) input.up = value;\n    // Right (right / D)\n    if (keyCode == 39 || keyCode == 68) input.right = value;\n    // Down (down / S)\n    if (keyCode == 40 || keyCode == 83) input.down = value;\n    // Left (left / A / Q)\n    if (keyCode == 37 || keyCode == 65 || keyCode == 81) input.left = value;\n    // Shift (left / right)\n    if (keyCode == 16) input.shift = value;\n    // Space\n    if (keyCode == 32) input.space = value;\n}\n\nexport function update(): void {}\n\nexport function createReleasedKeyPress(key: keyof Input): () => boolean {\n    let released = true;\n    return () => {\n        if (input[key] && released) {\n            released = false;\n            return true;\n        }\n        if (!input[key]) released = true;\n        return false;\n    };\n}\n","const u = undefined;\n\n// zzfx() - the universal entry point -- returns a AudioBufferSourceNode\nlet zzfx = (...t) => zzfxP(zzfxG(...t))\n\nlet zzfxX: AudioContext | null = null;\n\n// @ts-ignore\n// zzfxP() - the sound player -- returns a AudioBufferSourceNode\nlet zzfxP = (...t) => { let e = zzfxX.createBufferSource(), f = zzfxX.createBuffer(t.length, t[0].length, zzfxR); t.map((d, i) => f.getChannelData(i).set(d)), e.buffer = f, e.connect(zzfxX.destination), e.start(); return e }\n\n// @ts-ignore\n// zzfxG() - the sound generator -- returns an array of sample data\nlet zzfxG = (q = 1, k = .05, c = 220, e = 0, t = 0, u = .1, r = 0, F = 1, v = 0, z = 0, w = 0, A = 0, l = 0, B = 0, x = 0, G = 0, d = 0, y = 1, m = 0, C = 0) => { let b = 2 * Math.PI, H = v *= 500 * b / zzfxR ** 2, I = (0 < x ? 1 : -1) * b / 4, D = c *= (1 + 2 * k * Math.random() - k) * b / zzfxR, Z = [], g = 0, E = 0, a = 0, n = 1, J = 0, K = 0, f = 0, p, h; e = 99 + zzfxR * e; m *= zzfxR; t *= zzfxR; u *= zzfxR; d *= zzfxR; z *= 500 * b / zzfxR ** 3; x *= b / zzfxR; w *= b / zzfxR; A *= zzfxR; l = zzfxR * l | 0; for (h = e + m + t + u + d | 0; a < h; Z[a++] = f)++K % (100 * G | 0) || (f = r ? 1 < r ? 2 < r ? 3 < r ? Math.sin((g % b) ** 3) : Math.max(Math.min(Math.tan(g), 1), -1) : 1 - (2 * g / b % 2 + 2) % 2 : 1 - 4 * Math.abs(Math.round(g / b) - g / b) : Math.sin(g), f = (l ? 1 - C + C * Math.sin(2 * Math.PI * a / l) : 1) * (0 < f ? 1 : -1) * Math.abs(f) ** F * q * zzfxV * (a < e ? a / e : a < e + m ? 1 - (a - e) / m * (1 - y) : a < e + m + t ? y : a < h - d ? (h - a - d) / u * y : 0), f = d ? f / 2 + (d > a ? 0 : (a < h - d ? 1 : (h - a) / d) * Z[a - d | 0] / 2) : f), p = (c += v += z) * Math.sin(E * x - I), g += p - p * B * (1 - 1E9 * (Math.sin(a) + 1) % 2), E += p - p * B * (1 - 1E9 * (Math.sin(a) ** 2 + 1) % 2), n && ++n > A && (c += w, D += w, n = 0), !l || ++J % l || (c = D, v = H, n = n || 1); return Z }\n\n// @ts-ignore\n// zzfxV - global volume\nlet zzfxV = .3\n\n// @ts-ignore\n// zzfxR - global sample rate\nlet zzfxR = 44100\n\n// @ts-ignore\n//! ZzFXM (v2.0.3) | (C) Keith Clark | MIT | https://github.com/keithclark/ZzFXM\nlet zzfxM = (n, f, t, e = 125) => { let l, o, z, r, g, h, x, a, u, c, d, i, m, p, G, M = 0, R = [], b = [], j = [], k = 0, q = 0, s = 1, v = {}, w = zzfxR / e * 60 >> 2; for (; s; k++)R = [s = a = d = m = 0], t.map((e, d) => { for (x = f[e][k] || [0, 0, 0], s |= !!f[e][k], G = m + (f[e][0].length - 2 - !a) * w, p = d == t.length - 1, o = 2, r = m; o < x.length + p; a = ++o) { for (g = x[o], u = o == x.length + p - 1 && p || c != (x[0] || 0) | g | 0, z = 0; z < w && a; z++ > w - 99 && u ? i += (i < 1) / 99 : 0)h = (1 - i) * R[M++] / 2 || 0, b[r] = (b[r] || 0) - h * q + h, j[r] = (j[r++] || 0) + h * q + h; g && (i = g % 1, q = x[1] || 0, (g |= 0) && (R = v[[c = x[M = 0] || 0, g]] = v[[c, g]] || (l = [...n[c]], l[2] *= 2 ** ((g - 12) / 12), g > 0 ? zzfxG(...l) : []))) } m = G }); return [b, j] }\n\nlet cowboy = [[[.5, 0, 196, .05, .5, .6, 1], [.8, u, 24.5, .2, .3, .7, u, .5, u, u, 5, u, .1, u, u, u, u, .8, u, .2], [2, 0, 196, .02, .1, .4, 1], [, 0, 49, u, u, .2, 3, 5]], [[[, -1, 6, u, u, u, u, u, u, u, 8, u, u, u, u, u, u, u, 10, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u], [, 1, 10, u, u, u, u, u, u, u, 12, u, u, u, u, u, u, u, 17, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u], [, u, 3, u, u, u, u, u, u, u, 5, u, u, u, u, u, u, u, 6, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u], [2, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u, 15, 15, u, 13, u, 10, u]], [[, -1, 6, u, u, u, u, u, u, u, 8, u, u, u, u, u, u, u, 10, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u], [, 1, 10, u, u, u, u, u, u, u, 12, u, u, u, u, u, u, u, 17, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u], [, u, 3, u, u, u, u, u, u, u, 5, u, u, u, u, u, u, u, 6, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u], [2, u, 8, u, u, u, u, u, u, u, 3, u, 3, u, 10, u, u, u, 8, u, 6, u, u, u, u, u, u, 15, 15, u, 13, u, 10, u], [3, u, 8, u, u, u, 8, u, 10, u, u, u, u, u, u, u, u, u, u, u, u, u, 1, u, 3, u, u, 15, 15, u, 13, u, 10, u]], [[, -1, 6, u, u, u, u, u, u, u, 8, u, u, u, u, u, u, u, 10, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u], [, 1, 10, u, u, u, u, u, u, u, 12, u, u, u, u, u, u, u, 17, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u], [, u, 3, u, u, u, u, u, u, u, 5, u, u, u, u, u, u, u, 6, u, u, u, u, u, u, u, u, u, u, u, u, u, u, u], [2, u, 8, u, u, u, u, u, u, u, 3, u, 3, u, 10, u, u, u, 8, u, 6, u, u, u, u, u, u, 15, 15, u, 13, u, 10, u], [3, u, 8, u, u, u, 8, u, 10, u, u, u, 1, 3, u, u, 8, u, 1, 3, u, u, 1, u, 3, u, u, 15, 15, u, 13, u, 10, u]]], [0, 1, 2, 1, 2], 110, u];\n\nlet cowboy_song: any;\nlet audio_node: any;\n\nexport function load(): void {\n    zzfxX = new window.AudioContext;\n    // @ts-ignore\n    cowboy_song = zzfxM(...cowboy);\n}\n\nexport function play_cowboy(): void {\n    zzfxX?.resume();\n    audio_node = zzfxP(...cowboy_song);\n    audio_node.loop = true;\n}\n\nexport function stop_song(): void {\n    audio_node.stop();\n}","import logo from \"../assets/logo.png\";\n\nimport * as Bullet from \"./bullet\";\nimport { createReleasedKeyPress, input } from \"./input\";\nimport { Rectangle } from \"./rectangle\";\nimport { drawRect, loadImage, Renderer } from \"./renderer\";\nimport { Settings } from \"./settings\";\nimport { load, play_cowboy, stop_song } from \"./sound\";\nimport { Speed } from \"./speed\";\nimport * as Vector from \"./vector\";\n\nlet image: HTMLImageElement | null = null;\nconst width = 50;\nconst height = 50;\nconst spaceInput = createReleasedKeyPress(\"space\");\nconst shiftInput = createReleasedKeyPress(\"shift\");\nlet shootPosition = Vector.create(width, height / 2);\nlet isPlaying = false;\nlet isAudioInitialized = false;\n\nexport type Player = Rectangle &\n    Speed & {\n        bullets: Bullet.Bullet[];\n    };\n\nexport function create(): Player {\n    image = loadImage(logo);\n    const player = {\n        x: width,\n        dx: 0,\n        y: Settings.height / 2,\n        dy: 0,\n        w: width,\n        h: height,\n        bullets: [\n            Bullet.create(),\n            Bullet.create(),\n            Bullet.create(),\n            Bullet.create(),\n            Bullet.create(),\n            Bullet.create(),\n            Bullet.create(),\n            Bullet.create(),\n            Bullet.create(),\n            Bullet.create(),\n        ],\n    };\n    return player;\n}\n\nexport function shoot(player: Player): void {\n    let bullet: Bullet.Bullet | undefined = player.bullets.find((b) => !b.isActive);\n    if (bullet == undefined) return;\n    Bullet.fire(bullet, Vector.add(player, shootPosition), Settings.playerBulletSpeedX);\n}\n\nexport function update(player: Player) {\n    let dx = 0,\n        dy = 0;\n    if (input.left) dx += -Settings.playerSpeedX;\n    if (input.right) dx += Settings.playerSpeedX;\n    if (input.up) dy += -Settings.playerSpeedY;\n    if (input.down) dy += Settings.playerSpeedY;\n    if (spaceInput()) shoot(player);\n    player.dx = dx;\n    player.dy = dy;\n\n    if (!isAudioInitialized) {\n        load();\n        isAudioInitialized = true;\n    }\n    if (isAudioInitialized && shiftInput()) {\n        if (isPlaying) {\n            stop_song();\n        } else {\n            play_cowboy();\n        }\n        isPlaying = !isPlaying;\n    }\n\n    player.x += player.dx * Settings.delta;\n    player.y += player.dy * Settings.delta;\n    updateBullets(player.bullets);\n}\n\nfunction updateBullets(bullets: Bullet.Bullet[]): void {\n    for (let bullet of bullets) {\n        Bullet.update(bullet);\n    }\n}\n\nexport function reset(player: Player): void {\n    player.x = 0;\n    player.y = 0;\n    player.dx = 0;\n    player.dy = 0;\n}\n\nexport function render(renderer: Renderer, player: Player) {\n    if (!image?.complete) return;\n    drawRect(renderer, player);\n    for (let bullet of player.bullets) {\n        if (bullet.isActive) {\n            Bullet.render(renderer, bullet);\n        }\n    }\n}\n","import { sign } from \"./alias\";\nimport { free } from \"./bullet\";\nimport { die as enemyDie, Enemies, getActiveEnemies, reset as resetEnemies } from \"./enemies\";\nimport { Player, reset as resetPlayer } from \"./player\";\nimport { getCenter, Rectangle } from \"./rectangle\";\nimport { Vector } from \"./vector\";\n\nexport type Collision = Rectangle;\n\ntype Overlap = Vector;\n\nexport function getCollision(rectangle1: Rectangle, rectangle2: Rectangle): Collision | null {\n    const xOverlap = getOverlap(xProject(rectangle1), xProject(rectangle2));\n    const yOverlap = getOverlap(yProject(rectangle1), yProject(rectangle2));\n    // collides if there is an overlap on x axis and y axis\n    if (xOverlap == null || yOverlap == null) return null;\n    return {\n        x: xOverlap.x,\n        y: yOverlap.x,\n        w: xOverlap.y - xOverlap.x,\n        h: yOverlap.y - yOverlap.x,\n    };\n}\n\nexport function update(player: Player, enemies: Enemies): void {\n    for (let enemy of getActiveEnemies(enemies)) {\n        for (let bullet of player.bullets) {\n            const bulletEnemyCollision = getCollision(enemy, bullet);\n            if (bulletEnemyCollision != null) {\n                free(bullet);\n                enemyDie(enemy, enemies);\n            }\n        }\n        const playerEnemyCollision = getCollision(player, enemy);\n        if (playerEnemyCollision != null) {\n            resetPlayer(player);\n            resetEnemies(enemies);\n        }\n    }\n}\n\nfunction getTranslationVector(\n    player: Rectangle,\n    rectangle: Rectangle,\n    collision: Collision\n): Vector {\n    const playerCenter = getCenter(player);\n    const platformCenter = getCenter(rectangle);\n    const xSign = sign(playerCenter.x - platformCenter.x);\n    const ySign = sign(playerCenter.y - platformCenter.y);\n    const translation =\n        collision.w > collision.h\n            ? { x: 0, y: ySign * collision.h }\n            : { x: xSign * collision.w, y: 0 };\n    return translation;\n}\n\nfunction xProject(rectangle: Rectangle): Vector {\n    return { x: rectangle.x, y: rectangle.x + rectangle.w };\n}\n\nfunction yProject(rectangle: Rectangle): Vector {\n    return { x: rectangle.y, y: rectangle.y + rectangle.h };\n}\n\nfunction getOverlap(s1: Vector, s2: Vector): Overlap | null {\n    if (s1.y <= s2.x || s2.y <= s1.x) return null;\n    return {\n        x: Math.max(s1.x, s2.x),\n        y: Math.min(s1.y, s2.y),\n    };\n}\n","import { floor } from \"./alias\";\nimport * as Enemies from \"./enemies\";\nimport * as Physics from \"./physics\";\nimport * as Player from \"./player\";\nimport * as Renderer from \"./renderer\";\nimport { Settings } from \"./settings\";\n\nlet tickLength = Settings.engineTimeResolution;\nlet lastTick = performance.now();\nlet lastRender = lastTick;\n\nconst player = Player.create();\nconst enemies = Enemies.create();\nconst renderer = Renderer.create();\n\nfunction loop(tFrame: number): void {\n    window.requestAnimationFrame((t) => loop(t));\n    var nextTick = lastTick + tickLength;\n    var numTicks = 0;\n\n    if (tFrame > nextTick) {\n        var elapsed = tFrame - lastTick;\n        numTicks = floor(elapsed / tickLength);\n    }\n\n    for (var i = 0; i < numTicks; i++) {\n        lastTick += tickLength;\n        update();\n    }\n\n    render();\n    lastRender = tFrame;\n}\n\nfunction update(): void {\n    Player.update(player);\n    Enemies.update(enemies);\n    Physics.update(player, enemies);\n}\n\nfunction render(): void {\n    Renderer.clear(renderer);\n    Player.render(renderer, player);\n    Enemies.render(renderer, enemies);\n}\n\nloop(0);\n"],"names":["$dc72d67b15d606b5$export$2077e0241d6afd3c","value","Math","round","$dc72d67b15d606b5$export$50d414a77b60d802","cos","$dc72d67b15d606b5$export$5de3937cb4b592ed","sin","$dc72d67b15d606b5$export$83595b84fc78b9b4","id","document","getElementById","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","resolved","Error","parcelRequire","register","JSON","parse","$dc72d67b15d606b5$export$6b5c1ceb16d01dc3","PI","$95c1e97c8d1548a3$export$c72f6eaae7b9adff","debug","width","height","playerSpeedX","playerSpeedY","playerBulletSpeedX","enemyBulletSpeedX","enemyShootFrequency","enemyBulletPoolSize","enemyWidth","enemyHeight","waveEasyTimeMin","waveEasyTimeMax","waveEasyAmplitudeMin","waveEasyAmplitudeMax","waveEasyFrequencyMin","waveEasyFrequencyMax","waveEasyRxMin","waveEasyRxMax","waveEasyRyMin","waveEasyRyMax","waveEasySyMin","waveEasySyMax","waveMediumTimeMin","waveMediumTimeMax","waveMediumAmplitudeMin","waveMediumAmplitudeMax","waveMediumFrequencyMin","waveMediumFrequencyMax","waveMediumRxMin","waveMediumRxMax","waveMediumRyMin","waveMediumRyMax","waveMediumSyMin","waveMediumSyMax","waveHardTimeMin","waveHardTimeMax","waveHardAmplitudeMin","waveHardAmplitudeMax","waveHardFrequencyMin","waveHardFrequencyMax","waveHardRxMin","waveHardRxMax","waveHardRyMin","waveHardRyMax","waveHardSyMin","waveHardSyMax","engineTimeResolution","epsilon","delta","$621f3774f67738fc$export$cd3d1f114b139967","w","h","canvas","element","createElement","getContext","$621f3774f67738fc$export$92e8c004f9e4bf7d","x","y","color","fillStyle","fillRect","$7affe5820735a166$export$722fbec263ad908a","bullet","isActive","dx","dy","$7affe5820735a166$export$b3890eb0ae9dca99","renderer","$7affe5820735a166$export$46ff36df9b99bc25","dest","speed","$7affe5820735a166$export$13e2de3c33d99539","$69e3cfcc1b264755$export$bb0a9c36cf454ea0","values","floor","random","$69e3cfcc1b264755$export$1de69fc254e2c59a","min","max","$69e3cfcc1b264755$export$9a7af101302f2b8b","ceil","$97fc7d4a5f524dad$export$185802fd694ee1f5","$97fc7d4a5f524dad$export$e16d8520af44a096","vector1","vector2","$1536b058750c3eeb$export$cacd6541cfeeb6c1","Direction1","$1536b058750c3eeb$export$47606a6ae3eaed8e","Pattern1","$1536b058750c3eeb$var$bullets","push","$1536b058750c3eeb$export$185802fd694ee1f5","sy","pattern","time","amplitude","frequency","rx","ry","dead","elapsedTime","shootElapsedTime","distance","$1536b058750c3eeb$export$722fbec263ad908a","enemy","speedX","Circular","Rectangular","target","direction","Left","Up","Down","Right","Triangular","Straight","find","b","undefined","$1536b058750c3eeb$export$b3890eb0ae9dca99","$15eca799b850ba09$export$f7d21cea27b2c767","WaveDifficulty1","$15eca799b850ba09$export$185802fd694ee1f5","difficulty","enemies","Easy","size","$15eca799b850ba09$export$a3d56fea6627f8b9","Medium","Hard","toString","$298f8e1d43ecec9d$var$elapsedTime","$298f8e1d43ecec9d$export$48de3ab544db44a7","entities","deadCount","$298f8e1d43ecec9d$export$aad8462122ac592b","$298f8e1d43ecec9d$export$1a64584e86ab64a2","$9cbcbc18ca4a0a3e$exports","URL","resolve","import","meta","url","$8efa37a468313d04$export$b7e3ae3d7c15e42e","up","down","left","right","space","shift","$8efa37a468313d04$export$92fb031f79e289a0","key","released","onkeydown","onkeyup","event","keyCode","$8efa37a468313d04$var$setKey","type","$e0ea8097d55977c9$var$cowboy_song","$e0ea8097d55977c9$var$audio_node","$e0ea8097d55977c9$var$zzfxX","$e0ea8097d55977c9$var$zzfxP","t","e","createBufferSource","f","createBuffer","$e0ea8097d55977c9$var$zzfxR","map","d","getChannelData","set","buffer","connect","destination","start","$e0ea8097d55977c9$var$zzfxG","q","k","c","u1","r","F","v","z","A","l","B","G","m","C","p","H","I","D","Z","g","E","a","n","J","K","tan","abs","$e0ea8097d55977c9$var$zzfxV","$e0ea8097d55977c9$var$cowboy","$e0ea8097d55977c9$export$11e63f7b0f3d9900","window","AudioContext","e1","o","u2","d1","M","R","j","s","$e0ea8097d55977c9$var$zzfxM","$51d548b0596e1d08$var$image","$51d548b0596e1d08$var$spaceInput","$51d548b0596e1d08$var$shiftInput","$51d548b0596e1d08$var$shootPosition","$51d548b0596e1d08$var$height","$51d548b0596e1d08$var$isPlaying","$51d548b0596e1d08$var$isAudioInitialized","$51d548b0596e1d08$export$722fbec263ad908a","player","bullets","$51d548b0596e1d08$export$f674b830291c9902","stop","resume","loop","$51d548b0596e1d08$var$updateBullets","$51d548b0596e1d08$export$aad8462122ac592b","$5dda501f4a9774dc$export$f593b915385460f1","rectangle1","rectangle2","xOverlap","$5dda501f4a9774dc$var$getOverlap","$5dda501f4a9774dc$var$xProject","yOverlap","$5dda501f4a9774dc$var$yProject","rectangle","s1","s2","$f43313d21d3fd8e2$var$tickLength","$f43313d21d3fd8e2$var$lastTick","performance","now","$f43313d21d3fd8e2$var$lastRender","$f43313d21d3fd8e2$var$player","path","onload","image","Image","src","$parcel$interopDefault","$f43313d21d3fd8e2$var$enemies","$f43313d21d3fd8e2$var$renderer","$f43313d21d3fd8e2$var$update","$298f8e1d43ecec9d$export$722fbec263ad908a","filter","$5dda501f4a9774dc$export$722fbec263ad908a","$f43313d21d3fd8e2$var$loop","tFrame","requestAnimationFrame","numTicks","clearRect","$621f3774f67738fc$export$42ffd38884aecdac","complete","$51d548b0596e1d08$export$b3890eb0ae9dca99","$298f8e1d43ecec9d$export$b3890eb0ae9dca99"],"version":3,"file":"index.a2906984.js.map"}